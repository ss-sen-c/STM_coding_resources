
001_ITM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b74  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000074  08000d38  08000d38  00010d38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000dac  08000dac  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000dac  08000dac  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000dac  08000dac  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000dac  08000dac  00010dac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000db0  08000db0  00010db0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000db4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  20000064  08000e18  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08000e18  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000020d9  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005ab  00000000  00000000  0002216d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000118  00000000  00000000  00022718  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000e0  00000000  00000000  00022830  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000279c  00000000  00000000  00022910  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001274  00000000  00000000  000250ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00008776  00000000  00000000  00026320  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002ea96  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000924  00000000  00000000  0002eb14  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000064 	.word	0x20000064
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000d20 	.word	0x08000d20

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000068 	.word	0x20000068
 8000200:	08000d20 	.word	0x08000d20

08000204 <main>:
  * @brief   Default main function.
  ******************************************************************************
*/
#include <stdio.h>
int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	printf("hello using ITM\n");
 8000208:	4801      	ldr	r0, [pc, #4]	; (8000210 <main+0xc>)
 800020a:	f000 f97d 	bl	8000508 <puts>
	for(;;);
 800020e:	e7fe      	b.n	800020e <main+0xa>
 8000210:	08000d38 	.word	0x08000d38

08000214 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000214:	b480      	push	{r7}
 8000216:	b083      	sub	sp, #12
 8000218:	af00      	add	r7, sp, #0
 800021a:	4603      	mov	r3, r0
 800021c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800021e:	4b0f      	ldr	r3, [pc, #60]	; (800025c <ITM_SendChar+0x48>)
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	4a0e      	ldr	r2, [pc, #56]	; (800025c <ITM_SendChar+0x48>)
 8000224:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000228:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800022a:	4b0d      	ldr	r3, [pc, #52]	; (8000260 <ITM_SendChar+0x4c>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	4a0c      	ldr	r2, [pc, #48]	; (8000260 <ITM_SendChar+0x4c>)
 8000230:	f043 0301 	orr.w	r3, r3, #1
 8000234:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 8000236:	bf00      	nop
 8000238:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	f003 0301 	and.w	r3, r3, #1
 8000242:	2b00      	cmp	r3, #0
 8000244:	d0f8      	beq.n	8000238 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 8000246:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800024a:	79fb      	ldrb	r3, [r7, #7]
 800024c:	6013      	str	r3, [r2, #0]
}
 800024e:	bf00      	nop
 8000250:	370c      	adds	r7, #12
 8000252:	46bd      	mov	sp, r7
 8000254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000258:	4770      	bx	lr
 800025a:	bf00      	nop
 800025c:	e000edfc 	.word	0xe000edfc
 8000260:	e0000e00 	.word	0xe0000e00

08000264 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	b086      	sub	sp, #24
 8000268:	af00      	add	r7, sp, #0
 800026a:	60f8      	str	r0, [r7, #12]
 800026c:	60b9      	str	r1, [r7, #8]
 800026e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000270:	2300      	movs	r3, #0
 8000272:	617b      	str	r3, [r7, #20]
 8000274:	e00a      	b.n	800028c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000276:	f3af 8000 	nop.w
 800027a:	4601      	mov	r1, r0
 800027c:	68bb      	ldr	r3, [r7, #8]
 800027e:	1c5a      	adds	r2, r3, #1
 8000280:	60ba      	str	r2, [r7, #8]
 8000282:	b2ca      	uxtb	r2, r1
 8000284:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000286:	697b      	ldr	r3, [r7, #20]
 8000288:	3301      	adds	r3, #1
 800028a:	617b      	str	r3, [r7, #20]
 800028c:	697a      	ldr	r2, [r7, #20]
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	429a      	cmp	r2, r3
 8000292:	dbf0      	blt.n	8000276 <_read+0x12>
	}

return len;
 8000294:	687b      	ldr	r3, [r7, #4]
}
 8000296:	4618      	mov	r0, r3
 8000298:	3718      	adds	r7, #24
 800029a:	46bd      	mov	sp, r7
 800029c:	bd80      	pop	{r7, pc}

0800029e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800029e:	b580      	push	{r7, lr}
 80002a0:	b086      	sub	sp, #24
 80002a2:	af00      	add	r7, sp, #0
 80002a4:	60f8      	str	r0, [r7, #12]
 80002a6:	60b9      	str	r1, [r7, #8]
 80002a8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002aa:	2300      	movs	r3, #0
 80002ac:	617b      	str	r3, [r7, #20]
 80002ae:	e009      	b.n	80002c4 <_write+0x26>
	{
		// SEN Manual change for ITM START
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 80002b0:	68bb      	ldr	r3, [r7, #8]
 80002b2:	1c5a      	adds	r2, r3, #1
 80002b4:	60ba      	str	r2, [r7, #8]
 80002b6:	781b      	ldrb	r3, [r3, #0]
 80002b8:	4618      	mov	r0, r3
 80002ba:	f7ff ffab 	bl	8000214 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002be:	697b      	ldr	r3, [r7, #20]
 80002c0:	3301      	adds	r3, #1
 80002c2:	617b      	str	r3, [r7, #20]
 80002c4:	697a      	ldr	r2, [r7, #20]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	429a      	cmp	r2, r3
 80002ca:	dbf1      	blt.n	80002b0 <_write+0x12>
		// SEN Manual change for ITM STOP
	}
	return len;
 80002cc:	687b      	ldr	r3, [r7, #4]
}
 80002ce:	4618      	mov	r0, r3
 80002d0:	3718      	adds	r7, #24
 80002d2:	46bd      	mov	sp, r7
 80002d4:	bd80      	pop	{r7, pc}

080002d6 <_close>:

int _close(int file)
{
 80002d6:	b480      	push	{r7}
 80002d8:	b083      	sub	sp, #12
 80002da:	af00      	add	r7, sp, #0
 80002dc:	6078      	str	r0, [r7, #4]
	return -1;
 80002de:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002e2:	4618      	mov	r0, r3
 80002e4:	370c      	adds	r7, #12
 80002e6:	46bd      	mov	sp, r7
 80002e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ec:	4770      	bx	lr

080002ee <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002ee:	b480      	push	{r7}
 80002f0:	b083      	sub	sp, #12
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	6078      	str	r0, [r7, #4]
 80002f6:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80002f8:	683b      	ldr	r3, [r7, #0]
 80002fa:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002fe:	605a      	str	r2, [r3, #4]
	return 0;
 8000300:	2300      	movs	r3, #0
}
 8000302:	4618      	mov	r0, r3
 8000304:	370c      	adds	r7, #12
 8000306:	46bd      	mov	sp, r7
 8000308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800030c:	4770      	bx	lr

0800030e <_isatty>:

int _isatty(int file)
{
 800030e:	b480      	push	{r7}
 8000310:	b083      	sub	sp, #12
 8000312:	af00      	add	r7, sp, #0
 8000314:	6078      	str	r0, [r7, #4]
	return 1;
 8000316:	2301      	movs	r3, #1
}
 8000318:	4618      	mov	r0, r3
 800031a:	370c      	adds	r7, #12
 800031c:	46bd      	mov	sp, r7
 800031e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000322:	4770      	bx	lr

08000324 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000324:	b480      	push	{r7}
 8000326:	b085      	sub	sp, #20
 8000328:	af00      	add	r7, sp, #0
 800032a:	60f8      	str	r0, [r7, #12]
 800032c:	60b9      	str	r1, [r7, #8]
 800032e:	607a      	str	r2, [r7, #4]
	return 0;
 8000330:	2300      	movs	r3, #0
}
 8000332:	4618      	mov	r0, r3
 8000334:	3714      	adds	r7, #20
 8000336:	46bd      	mov	sp, r7
 8000338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800033c:	4770      	bx	lr
	...

08000340 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b084      	sub	sp, #16
 8000344:	af00      	add	r7, sp, #0
 8000346:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000348:	4b11      	ldr	r3, [pc, #68]	; (8000390 <_sbrk+0x50>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	2b00      	cmp	r3, #0
 800034e:	d102      	bne.n	8000356 <_sbrk+0x16>
		heap_end = &end;
 8000350:	4b0f      	ldr	r3, [pc, #60]	; (8000390 <_sbrk+0x50>)
 8000352:	4a10      	ldr	r2, [pc, #64]	; (8000394 <_sbrk+0x54>)
 8000354:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8000356:	4b0e      	ldr	r3, [pc, #56]	; (8000390 <_sbrk+0x50>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 800035c:	4b0c      	ldr	r3, [pc, #48]	; (8000390 <_sbrk+0x50>)
 800035e:	681a      	ldr	r2, [r3, #0]
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4413      	add	r3, r2
 8000364:	466a      	mov	r2, sp
 8000366:	4293      	cmp	r3, r2
 8000368:	d907      	bls.n	800037a <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800036a:	f000 f83f 	bl	80003ec <__errno>
 800036e:	4602      	mov	r2, r0
 8000370:	230c      	movs	r3, #12
 8000372:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8000374:	f04f 33ff 	mov.w	r3, #4294967295
 8000378:	e006      	b.n	8000388 <_sbrk+0x48>
	}

	heap_end += incr;
 800037a:	4b05      	ldr	r3, [pc, #20]	; (8000390 <_sbrk+0x50>)
 800037c:	681a      	ldr	r2, [r3, #0]
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4413      	add	r3, r2
 8000382:	4a03      	ldr	r2, [pc, #12]	; (8000390 <_sbrk+0x50>)
 8000384:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8000386:	68fb      	ldr	r3, [r7, #12]
}
 8000388:	4618      	mov	r0, r3
 800038a:	3710      	adds	r7, #16
 800038c:	46bd      	mov	sp, r7
 800038e:	bd80      	pop	{r7, pc}
 8000390:	20000080 	.word	0x20000080
 8000394:	20000090 	.word	0x20000090

08000398 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000398:	480d      	ldr	r0, [pc, #52]	; (80003d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800039a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */

  ldr r0, =_sdata
 800039c:	480d      	ldr	r0, [pc, #52]	; (80003d4 <LoopForever+0x6>)
  ldr r1, =_edata
 800039e:	490e      	ldr	r1, [pc, #56]	; (80003d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003a0:	4a0e      	ldr	r2, [pc, #56]	; (80003dc <LoopForever+0xe>)
  movs r3, #0
 80003a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003a4:	e002      	b.n	80003ac <LoopCopyDataInit>

080003a6 <CopyDataInit>:

CopyDataInit:


  ldr r4, [r2, r3]
 80003a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003aa:	3304      	adds	r3, #4

080003ac <LoopCopyDataInit>:

LoopCopyDataInit:


  adds r4, r0, r3
 80003ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ae:	428c      	cmp	r4, r1



  bcc CopyDataInit
 80003b0:	d3f9      	bcc.n	80003a6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003b2:	4a0b      	ldr	r2, [pc, #44]	; (80003e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003b4:	4c0b      	ldr	r4, [pc, #44]	; (80003e4 <LoopForever+0x16>)
  movs r3, #0
 80003b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003b8:	e001      	b.n	80003be <LoopFillZerobss>

080003ba <FillZerobss>:

FillZerobss:

  str  r3, [r2]
 80003ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003bc:	3204      	adds	r2, #4

080003be <LoopFillZerobss>:

LoopFillZerobss:

  cmp r2, r4
 80003be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003c0:	d3fb      	bcc.n	80003ba <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80003c2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80003c6:	f000 f817 	bl	80003f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003ca:	f7ff ff1b 	bl	8000204 <main>

080003ce <LoopForever>:

LoopForever:
    b LoopForever
 80003ce:	e7fe      	b.n	80003ce <LoopForever>
  ldr   r0, =_estack
 80003d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003d8:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80003dc:	08000db4 	.word	0x08000db4
  ldr r2, =_sbss
 80003e0:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80003e4:	20000090 	.word	0x20000090

080003e8 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003e8:	e7fe      	b.n	80003e8 <ADC_IRQHandler>
	...

080003ec <__errno>:
 80003ec:	4b01      	ldr	r3, [pc, #4]	; (80003f4 <__errno+0x8>)
 80003ee:	6818      	ldr	r0, [r3, #0]
 80003f0:	4770      	bx	lr
 80003f2:	bf00      	nop
 80003f4:	20000000 	.word	0x20000000

080003f8 <__libc_init_array>:
 80003f8:	b570      	push	{r4, r5, r6, lr}
 80003fa:	4e0d      	ldr	r6, [pc, #52]	; (8000430 <__libc_init_array+0x38>)
 80003fc:	4c0d      	ldr	r4, [pc, #52]	; (8000434 <__libc_init_array+0x3c>)
 80003fe:	1ba4      	subs	r4, r4, r6
 8000400:	10a4      	asrs	r4, r4, #2
 8000402:	2500      	movs	r5, #0
 8000404:	42a5      	cmp	r5, r4
 8000406:	d109      	bne.n	800041c <__libc_init_array+0x24>
 8000408:	4e0b      	ldr	r6, [pc, #44]	; (8000438 <__libc_init_array+0x40>)
 800040a:	4c0c      	ldr	r4, [pc, #48]	; (800043c <__libc_init_array+0x44>)
 800040c:	f000 fc88 	bl	8000d20 <_init>
 8000410:	1ba4      	subs	r4, r4, r6
 8000412:	10a4      	asrs	r4, r4, #2
 8000414:	2500      	movs	r5, #0
 8000416:	42a5      	cmp	r5, r4
 8000418:	d105      	bne.n	8000426 <__libc_init_array+0x2e>
 800041a:	bd70      	pop	{r4, r5, r6, pc}
 800041c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000420:	4798      	blx	r3
 8000422:	3501      	adds	r5, #1
 8000424:	e7ee      	b.n	8000404 <__libc_init_array+0xc>
 8000426:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800042a:	4798      	blx	r3
 800042c:	3501      	adds	r5, #1
 800042e:	e7f2      	b.n	8000416 <__libc_init_array+0x1e>
 8000430:	08000dac 	.word	0x08000dac
 8000434:	08000dac 	.word	0x08000dac
 8000438:	08000dac 	.word	0x08000dac
 800043c:	08000db0 	.word	0x08000db0

08000440 <memset>:
 8000440:	4402      	add	r2, r0
 8000442:	4603      	mov	r3, r0
 8000444:	4293      	cmp	r3, r2
 8000446:	d100      	bne.n	800044a <memset+0xa>
 8000448:	4770      	bx	lr
 800044a:	f803 1b01 	strb.w	r1, [r3], #1
 800044e:	e7f9      	b.n	8000444 <memset+0x4>

08000450 <_puts_r>:
 8000450:	b570      	push	{r4, r5, r6, lr}
 8000452:	460e      	mov	r6, r1
 8000454:	4605      	mov	r5, r0
 8000456:	b118      	cbz	r0, 8000460 <_puts_r+0x10>
 8000458:	6983      	ldr	r3, [r0, #24]
 800045a:	b90b      	cbnz	r3, 8000460 <_puts_r+0x10>
 800045c:	f000 fa0c 	bl	8000878 <__sinit>
 8000460:	69ab      	ldr	r3, [r5, #24]
 8000462:	68ac      	ldr	r4, [r5, #8]
 8000464:	b913      	cbnz	r3, 800046c <_puts_r+0x1c>
 8000466:	4628      	mov	r0, r5
 8000468:	f000 fa06 	bl	8000878 <__sinit>
 800046c:	4b23      	ldr	r3, [pc, #140]	; (80004fc <_puts_r+0xac>)
 800046e:	429c      	cmp	r4, r3
 8000470:	d117      	bne.n	80004a2 <_puts_r+0x52>
 8000472:	686c      	ldr	r4, [r5, #4]
 8000474:	89a3      	ldrh	r3, [r4, #12]
 8000476:	071b      	lsls	r3, r3, #28
 8000478:	d51d      	bpl.n	80004b6 <_puts_r+0x66>
 800047a:	6923      	ldr	r3, [r4, #16]
 800047c:	b1db      	cbz	r3, 80004b6 <_puts_r+0x66>
 800047e:	3e01      	subs	r6, #1
 8000480:	68a3      	ldr	r3, [r4, #8]
 8000482:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000486:	3b01      	subs	r3, #1
 8000488:	60a3      	str	r3, [r4, #8]
 800048a:	b9e9      	cbnz	r1, 80004c8 <_puts_r+0x78>
 800048c:	2b00      	cmp	r3, #0
 800048e:	da2e      	bge.n	80004ee <_puts_r+0x9e>
 8000490:	4622      	mov	r2, r4
 8000492:	210a      	movs	r1, #10
 8000494:	4628      	mov	r0, r5
 8000496:	f000 f83f 	bl	8000518 <__swbuf_r>
 800049a:	3001      	adds	r0, #1
 800049c:	d011      	beq.n	80004c2 <_puts_r+0x72>
 800049e:	200a      	movs	r0, #10
 80004a0:	e011      	b.n	80004c6 <_puts_r+0x76>
 80004a2:	4b17      	ldr	r3, [pc, #92]	; (8000500 <_puts_r+0xb0>)
 80004a4:	429c      	cmp	r4, r3
 80004a6:	d101      	bne.n	80004ac <_puts_r+0x5c>
 80004a8:	68ac      	ldr	r4, [r5, #8]
 80004aa:	e7e3      	b.n	8000474 <_puts_r+0x24>
 80004ac:	4b15      	ldr	r3, [pc, #84]	; (8000504 <_puts_r+0xb4>)
 80004ae:	429c      	cmp	r4, r3
 80004b0:	bf08      	it	eq
 80004b2:	68ec      	ldreq	r4, [r5, #12]
 80004b4:	e7de      	b.n	8000474 <_puts_r+0x24>
 80004b6:	4621      	mov	r1, r4
 80004b8:	4628      	mov	r0, r5
 80004ba:	f000 f87f 	bl	80005bc <__swsetup_r>
 80004be:	2800      	cmp	r0, #0
 80004c0:	d0dd      	beq.n	800047e <_puts_r+0x2e>
 80004c2:	f04f 30ff 	mov.w	r0, #4294967295
 80004c6:	bd70      	pop	{r4, r5, r6, pc}
 80004c8:	2b00      	cmp	r3, #0
 80004ca:	da04      	bge.n	80004d6 <_puts_r+0x86>
 80004cc:	69a2      	ldr	r2, [r4, #24]
 80004ce:	429a      	cmp	r2, r3
 80004d0:	dc06      	bgt.n	80004e0 <_puts_r+0x90>
 80004d2:	290a      	cmp	r1, #10
 80004d4:	d004      	beq.n	80004e0 <_puts_r+0x90>
 80004d6:	6823      	ldr	r3, [r4, #0]
 80004d8:	1c5a      	adds	r2, r3, #1
 80004da:	6022      	str	r2, [r4, #0]
 80004dc:	7019      	strb	r1, [r3, #0]
 80004de:	e7cf      	b.n	8000480 <_puts_r+0x30>
 80004e0:	4622      	mov	r2, r4
 80004e2:	4628      	mov	r0, r5
 80004e4:	f000 f818 	bl	8000518 <__swbuf_r>
 80004e8:	3001      	adds	r0, #1
 80004ea:	d1c9      	bne.n	8000480 <_puts_r+0x30>
 80004ec:	e7e9      	b.n	80004c2 <_puts_r+0x72>
 80004ee:	6823      	ldr	r3, [r4, #0]
 80004f0:	200a      	movs	r0, #10
 80004f2:	1c5a      	adds	r2, r3, #1
 80004f4:	6022      	str	r2, [r4, #0]
 80004f6:	7018      	strb	r0, [r3, #0]
 80004f8:	e7e5      	b.n	80004c6 <_puts_r+0x76>
 80004fa:	bf00      	nop
 80004fc:	08000d6c 	.word	0x08000d6c
 8000500:	08000d8c 	.word	0x08000d8c
 8000504:	08000d4c 	.word	0x08000d4c

08000508 <puts>:
 8000508:	4b02      	ldr	r3, [pc, #8]	; (8000514 <puts+0xc>)
 800050a:	4601      	mov	r1, r0
 800050c:	6818      	ldr	r0, [r3, #0]
 800050e:	f7ff bf9f 	b.w	8000450 <_puts_r>
 8000512:	bf00      	nop
 8000514:	20000000 	.word	0x20000000

08000518 <__swbuf_r>:
 8000518:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800051a:	460e      	mov	r6, r1
 800051c:	4614      	mov	r4, r2
 800051e:	4605      	mov	r5, r0
 8000520:	b118      	cbz	r0, 800052a <__swbuf_r+0x12>
 8000522:	6983      	ldr	r3, [r0, #24]
 8000524:	b90b      	cbnz	r3, 800052a <__swbuf_r+0x12>
 8000526:	f000 f9a7 	bl	8000878 <__sinit>
 800052a:	4b21      	ldr	r3, [pc, #132]	; (80005b0 <__swbuf_r+0x98>)
 800052c:	429c      	cmp	r4, r3
 800052e:	d12a      	bne.n	8000586 <__swbuf_r+0x6e>
 8000530:	686c      	ldr	r4, [r5, #4]
 8000532:	69a3      	ldr	r3, [r4, #24]
 8000534:	60a3      	str	r3, [r4, #8]
 8000536:	89a3      	ldrh	r3, [r4, #12]
 8000538:	071a      	lsls	r2, r3, #28
 800053a:	d52e      	bpl.n	800059a <__swbuf_r+0x82>
 800053c:	6923      	ldr	r3, [r4, #16]
 800053e:	b363      	cbz	r3, 800059a <__swbuf_r+0x82>
 8000540:	6923      	ldr	r3, [r4, #16]
 8000542:	6820      	ldr	r0, [r4, #0]
 8000544:	1ac0      	subs	r0, r0, r3
 8000546:	6963      	ldr	r3, [r4, #20]
 8000548:	b2f6      	uxtb	r6, r6
 800054a:	4283      	cmp	r3, r0
 800054c:	4637      	mov	r7, r6
 800054e:	dc04      	bgt.n	800055a <__swbuf_r+0x42>
 8000550:	4621      	mov	r1, r4
 8000552:	4628      	mov	r0, r5
 8000554:	f000 f926 	bl	80007a4 <_fflush_r>
 8000558:	bb28      	cbnz	r0, 80005a6 <__swbuf_r+0x8e>
 800055a:	68a3      	ldr	r3, [r4, #8]
 800055c:	3b01      	subs	r3, #1
 800055e:	60a3      	str	r3, [r4, #8]
 8000560:	6823      	ldr	r3, [r4, #0]
 8000562:	1c5a      	adds	r2, r3, #1
 8000564:	6022      	str	r2, [r4, #0]
 8000566:	701e      	strb	r6, [r3, #0]
 8000568:	6963      	ldr	r3, [r4, #20]
 800056a:	3001      	adds	r0, #1
 800056c:	4283      	cmp	r3, r0
 800056e:	d004      	beq.n	800057a <__swbuf_r+0x62>
 8000570:	89a3      	ldrh	r3, [r4, #12]
 8000572:	07db      	lsls	r3, r3, #31
 8000574:	d519      	bpl.n	80005aa <__swbuf_r+0x92>
 8000576:	2e0a      	cmp	r6, #10
 8000578:	d117      	bne.n	80005aa <__swbuf_r+0x92>
 800057a:	4621      	mov	r1, r4
 800057c:	4628      	mov	r0, r5
 800057e:	f000 f911 	bl	80007a4 <_fflush_r>
 8000582:	b190      	cbz	r0, 80005aa <__swbuf_r+0x92>
 8000584:	e00f      	b.n	80005a6 <__swbuf_r+0x8e>
 8000586:	4b0b      	ldr	r3, [pc, #44]	; (80005b4 <__swbuf_r+0x9c>)
 8000588:	429c      	cmp	r4, r3
 800058a:	d101      	bne.n	8000590 <__swbuf_r+0x78>
 800058c:	68ac      	ldr	r4, [r5, #8]
 800058e:	e7d0      	b.n	8000532 <__swbuf_r+0x1a>
 8000590:	4b09      	ldr	r3, [pc, #36]	; (80005b8 <__swbuf_r+0xa0>)
 8000592:	429c      	cmp	r4, r3
 8000594:	bf08      	it	eq
 8000596:	68ec      	ldreq	r4, [r5, #12]
 8000598:	e7cb      	b.n	8000532 <__swbuf_r+0x1a>
 800059a:	4621      	mov	r1, r4
 800059c:	4628      	mov	r0, r5
 800059e:	f000 f80d 	bl	80005bc <__swsetup_r>
 80005a2:	2800      	cmp	r0, #0
 80005a4:	d0cc      	beq.n	8000540 <__swbuf_r+0x28>
 80005a6:	f04f 37ff 	mov.w	r7, #4294967295
 80005aa:	4638      	mov	r0, r7
 80005ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005ae:	bf00      	nop
 80005b0:	08000d6c 	.word	0x08000d6c
 80005b4:	08000d8c 	.word	0x08000d8c
 80005b8:	08000d4c 	.word	0x08000d4c

080005bc <__swsetup_r>:
 80005bc:	4b32      	ldr	r3, [pc, #200]	; (8000688 <__swsetup_r+0xcc>)
 80005be:	b570      	push	{r4, r5, r6, lr}
 80005c0:	681d      	ldr	r5, [r3, #0]
 80005c2:	4606      	mov	r6, r0
 80005c4:	460c      	mov	r4, r1
 80005c6:	b125      	cbz	r5, 80005d2 <__swsetup_r+0x16>
 80005c8:	69ab      	ldr	r3, [r5, #24]
 80005ca:	b913      	cbnz	r3, 80005d2 <__swsetup_r+0x16>
 80005cc:	4628      	mov	r0, r5
 80005ce:	f000 f953 	bl	8000878 <__sinit>
 80005d2:	4b2e      	ldr	r3, [pc, #184]	; (800068c <__swsetup_r+0xd0>)
 80005d4:	429c      	cmp	r4, r3
 80005d6:	d10f      	bne.n	80005f8 <__swsetup_r+0x3c>
 80005d8:	686c      	ldr	r4, [r5, #4]
 80005da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80005de:	b29a      	uxth	r2, r3
 80005e0:	0715      	lsls	r5, r2, #28
 80005e2:	d42c      	bmi.n	800063e <__swsetup_r+0x82>
 80005e4:	06d0      	lsls	r0, r2, #27
 80005e6:	d411      	bmi.n	800060c <__swsetup_r+0x50>
 80005e8:	2209      	movs	r2, #9
 80005ea:	6032      	str	r2, [r6, #0]
 80005ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005f0:	81a3      	strh	r3, [r4, #12]
 80005f2:	f04f 30ff 	mov.w	r0, #4294967295
 80005f6:	e03e      	b.n	8000676 <__swsetup_r+0xba>
 80005f8:	4b25      	ldr	r3, [pc, #148]	; (8000690 <__swsetup_r+0xd4>)
 80005fa:	429c      	cmp	r4, r3
 80005fc:	d101      	bne.n	8000602 <__swsetup_r+0x46>
 80005fe:	68ac      	ldr	r4, [r5, #8]
 8000600:	e7eb      	b.n	80005da <__swsetup_r+0x1e>
 8000602:	4b24      	ldr	r3, [pc, #144]	; (8000694 <__swsetup_r+0xd8>)
 8000604:	429c      	cmp	r4, r3
 8000606:	bf08      	it	eq
 8000608:	68ec      	ldreq	r4, [r5, #12]
 800060a:	e7e6      	b.n	80005da <__swsetup_r+0x1e>
 800060c:	0751      	lsls	r1, r2, #29
 800060e:	d512      	bpl.n	8000636 <__swsetup_r+0x7a>
 8000610:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000612:	b141      	cbz	r1, 8000626 <__swsetup_r+0x6a>
 8000614:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000618:	4299      	cmp	r1, r3
 800061a:	d002      	beq.n	8000622 <__swsetup_r+0x66>
 800061c:	4630      	mov	r0, r6
 800061e:	f000 fa19 	bl	8000a54 <_free_r>
 8000622:	2300      	movs	r3, #0
 8000624:	6363      	str	r3, [r4, #52]	; 0x34
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800062c:	81a3      	strh	r3, [r4, #12]
 800062e:	2300      	movs	r3, #0
 8000630:	6063      	str	r3, [r4, #4]
 8000632:	6923      	ldr	r3, [r4, #16]
 8000634:	6023      	str	r3, [r4, #0]
 8000636:	89a3      	ldrh	r3, [r4, #12]
 8000638:	f043 0308 	orr.w	r3, r3, #8
 800063c:	81a3      	strh	r3, [r4, #12]
 800063e:	6923      	ldr	r3, [r4, #16]
 8000640:	b94b      	cbnz	r3, 8000656 <__swsetup_r+0x9a>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000648:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800064c:	d003      	beq.n	8000656 <__swsetup_r+0x9a>
 800064e:	4621      	mov	r1, r4
 8000650:	4630      	mov	r0, r6
 8000652:	f000 f9bf 	bl	80009d4 <__smakebuf_r>
 8000656:	89a2      	ldrh	r2, [r4, #12]
 8000658:	f012 0301 	ands.w	r3, r2, #1
 800065c:	d00c      	beq.n	8000678 <__swsetup_r+0xbc>
 800065e:	2300      	movs	r3, #0
 8000660:	60a3      	str	r3, [r4, #8]
 8000662:	6963      	ldr	r3, [r4, #20]
 8000664:	425b      	negs	r3, r3
 8000666:	61a3      	str	r3, [r4, #24]
 8000668:	6923      	ldr	r3, [r4, #16]
 800066a:	b953      	cbnz	r3, 8000682 <__swsetup_r+0xc6>
 800066c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000670:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8000674:	d1ba      	bne.n	80005ec <__swsetup_r+0x30>
 8000676:	bd70      	pop	{r4, r5, r6, pc}
 8000678:	0792      	lsls	r2, r2, #30
 800067a:	bf58      	it	pl
 800067c:	6963      	ldrpl	r3, [r4, #20]
 800067e:	60a3      	str	r3, [r4, #8]
 8000680:	e7f2      	b.n	8000668 <__swsetup_r+0xac>
 8000682:	2000      	movs	r0, #0
 8000684:	e7f7      	b.n	8000676 <__swsetup_r+0xba>
 8000686:	bf00      	nop
 8000688:	20000000 	.word	0x20000000
 800068c:	08000d6c 	.word	0x08000d6c
 8000690:	08000d8c 	.word	0x08000d8c
 8000694:	08000d4c 	.word	0x08000d4c

08000698 <__sflush_r>:
 8000698:	898a      	ldrh	r2, [r1, #12]
 800069a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800069e:	4605      	mov	r5, r0
 80006a0:	0710      	lsls	r0, r2, #28
 80006a2:	460c      	mov	r4, r1
 80006a4:	d458      	bmi.n	8000758 <__sflush_r+0xc0>
 80006a6:	684b      	ldr	r3, [r1, #4]
 80006a8:	2b00      	cmp	r3, #0
 80006aa:	dc05      	bgt.n	80006b8 <__sflush_r+0x20>
 80006ac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80006ae:	2b00      	cmp	r3, #0
 80006b0:	dc02      	bgt.n	80006b8 <__sflush_r+0x20>
 80006b2:	2000      	movs	r0, #0
 80006b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006ba:	2e00      	cmp	r6, #0
 80006bc:	d0f9      	beq.n	80006b2 <__sflush_r+0x1a>
 80006be:	2300      	movs	r3, #0
 80006c0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006c4:	682f      	ldr	r7, [r5, #0]
 80006c6:	6a21      	ldr	r1, [r4, #32]
 80006c8:	602b      	str	r3, [r5, #0]
 80006ca:	d032      	beq.n	8000732 <__sflush_r+0x9a>
 80006cc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006ce:	89a3      	ldrh	r3, [r4, #12]
 80006d0:	075a      	lsls	r2, r3, #29
 80006d2:	d505      	bpl.n	80006e0 <__sflush_r+0x48>
 80006d4:	6863      	ldr	r3, [r4, #4]
 80006d6:	1ac0      	subs	r0, r0, r3
 80006d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006da:	b10b      	cbz	r3, 80006e0 <__sflush_r+0x48>
 80006dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006de:	1ac0      	subs	r0, r0, r3
 80006e0:	2300      	movs	r3, #0
 80006e2:	4602      	mov	r2, r0
 80006e4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006e6:	6a21      	ldr	r1, [r4, #32]
 80006e8:	4628      	mov	r0, r5
 80006ea:	47b0      	blx	r6
 80006ec:	1c43      	adds	r3, r0, #1
 80006ee:	89a3      	ldrh	r3, [r4, #12]
 80006f0:	d106      	bne.n	8000700 <__sflush_r+0x68>
 80006f2:	6829      	ldr	r1, [r5, #0]
 80006f4:	291d      	cmp	r1, #29
 80006f6:	d848      	bhi.n	800078a <__sflush_r+0xf2>
 80006f8:	4a29      	ldr	r2, [pc, #164]	; (80007a0 <__sflush_r+0x108>)
 80006fa:	40ca      	lsrs	r2, r1
 80006fc:	07d6      	lsls	r6, r2, #31
 80006fe:	d544      	bpl.n	800078a <__sflush_r+0xf2>
 8000700:	2200      	movs	r2, #0
 8000702:	6062      	str	r2, [r4, #4]
 8000704:	04d9      	lsls	r1, r3, #19
 8000706:	6922      	ldr	r2, [r4, #16]
 8000708:	6022      	str	r2, [r4, #0]
 800070a:	d504      	bpl.n	8000716 <__sflush_r+0x7e>
 800070c:	1c42      	adds	r2, r0, #1
 800070e:	d101      	bne.n	8000714 <__sflush_r+0x7c>
 8000710:	682b      	ldr	r3, [r5, #0]
 8000712:	b903      	cbnz	r3, 8000716 <__sflush_r+0x7e>
 8000714:	6560      	str	r0, [r4, #84]	; 0x54
 8000716:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000718:	602f      	str	r7, [r5, #0]
 800071a:	2900      	cmp	r1, #0
 800071c:	d0c9      	beq.n	80006b2 <__sflush_r+0x1a>
 800071e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000722:	4299      	cmp	r1, r3
 8000724:	d002      	beq.n	800072c <__sflush_r+0x94>
 8000726:	4628      	mov	r0, r5
 8000728:	f000 f994 	bl	8000a54 <_free_r>
 800072c:	2000      	movs	r0, #0
 800072e:	6360      	str	r0, [r4, #52]	; 0x34
 8000730:	e7c0      	b.n	80006b4 <__sflush_r+0x1c>
 8000732:	2301      	movs	r3, #1
 8000734:	4628      	mov	r0, r5
 8000736:	47b0      	blx	r6
 8000738:	1c41      	adds	r1, r0, #1
 800073a:	d1c8      	bne.n	80006ce <__sflush_r+0x36>
 800073c:	682b      	ldr	r3, [r5, #0]
 800073e:	2b00      	cmp	r3, #0
 8000740:	d0c5      	beq.n	80006ce <__sflush_r+0x36>
 8000742:	2b1d      	cmp	r3, #29
 8000744:	d001      	beq.n	800074a <__sflush_r+0xb2>
 8000746:	2b16      	cmp	r3, #22
 8000748:	d101      	bne.n	800074e <__sflush_r+0xb6>
 800074a:	602f      	str	r7, [r5, #0]
 800074c:	e7b1      	b.n	80006b2 <__sflush_r+0x1a>
 800074e:	89a3      	ldrh	r3, [r4, #12]
 8000750:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000754:	81a3      	strh	r3, [r4, #12]
 8000756:	e7ad      	b.n	80006b4 <__sflush_r+0x1c>
 8000758:	690f      	ldr	r7, [r1, #16]
 800075a:	2f00      	cmp	r7, #0
 800075c:	d0a9      	beq.n	80006b2 <__sflush_r+0x1a>
 800075e:	0793      	lsls	r3, r2, #30
 8000760:	680e      	ldr	r6, [r1, #0]
 8000762:	bf08      	it	eq
 8000764:	694b      	ldreq	r3, [r1, #20]
 8000766:	600f      	str	r7, [r1, #0]
 8000768:	bf18      	it	ne
 800076a:	2300      	movne	r3, #0
 800076c:	eba6 0807 	sub.w	r8, r6, r7
 8000770:	608b      	str	r3, [r1, #8]
 8000772:	f1b8 0f00 	cmp.w	r8, #0
 8000776:	dd9c      	ble.n	80006b2 <__sflush_r+0x1a>
 8000778:	4643      	mov	r3, r8
 800077a:	463a      	mov	r2, r7
 800077c:	6a21      	ldr	r1, [r4, #32]
 800077e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000780:	4628      	mov	r0, r5
 8000782:	47b0      	blx	r6
 8000784:	2800      	cmp	r0, #0
 8000786:	dc06      	bgt.n	8000796 <__sflush_r+0xfe>
 8000788:	89a3      	ldrh	r3, [r4, #12]
 800078a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800078e:	81a3      	strh	r3, [r4, #12]
 8000790:	f04f 30ff 	mov.w	r0, #4294967295
 8000794:	e78e      	b.n	80006b4 <__sflush_r+0x1c>
 8000796:	4407      	add	r7, r0
 8000798:	eba8 0800 	sub.w	r8, r8, r0
 800079c:	e7e9      	b.n	8000772 <__sflush_r+0xda>
 800079e:	bf00      	nop
 80007a0:	20400001 	.word	0x20400001

080007a4 <_fflush_r>:
 80007a4:	b538      	push	{r3, r4, r5, lr}
 80007a6:	690b      	ldr	r3, [r1, #16]
 80007a8:	4605      	mov	r5, r0
 80007aa:	460c      	mov	r4, r1
 80007ac:	b1db      	cbz	r3, 80007e6 <_fflush_r+0x42>
 80007ae:	b118      	cbz	r0, 80007b8 <_fflush_r+0x14>
 80007b0:	6983      	ldr	r3, [r0, #24]
 80007b2:	b90b      	cbnz	r3, 80007b8 <_fflush_r+0x14>
 80007b4:	f000 f860 	bl	8000878 <__sinit>
 80007b8:	4b0c      	ldr	r3, [pc, #48]	; (80007ec <_fflush_r+0x48>)
 80007ba:	429c      	cmp	r4, r3
 80007bc:	d109      	bne.n	80007d2 <_fflush_r+0x2e>
 80007be:	686c      	ldr	r4, [r5, #4]
 80007c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007c4:	b17b      	cbz	r3, 80007e6 <_fflush_r+0x42>
 80007c6:	4621      	mov	r1, r4
 80007c8:	4628      	mov	r0, r5
 80007ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007ce:	f7ff bf63 	b.w	8000698 <__sflush_r>
 80007d2:	4b07      	ldr	r3, [pc, #28]	; (80007f0 <_fflush_r+0x4c>)
 80007d4:	429c      	cmp	r4, r3
 80007d6:	d101      	bne.n	80007dc <_fflush_r+0x38>
 80007d8:	68ac      	ldr	r4, [r5, #8]
 80007da:	e7f1      	b.n	80007c0 <_fflush_r+0x1c>
 80007dc:	4b05      	ldr	r3, [pc, #20]	; (80007f4 <_fflush_r+0x50>)
 80007de:	429c      	cmp	r4, r3
 80007e0:	bf08      	it	eq
 80007e2:	68ec      	ldreq	r4, [r5, #12]
 80007e4:	e7ec      	b.n	80007c0 <_fflush_r+0x1c>
 80007e6:	2000      	movs	r0, #0
 80007e8:	bd38      	pop	{r3, r4, r5, pc}
 80007ea:	bf00      	nop
 80007ec:	08000d6c 	.word	0x08000d6c
 80007f0:	08000d8c 	.word	0x08000d8c
 80007f4:	08000d4c 	.word	0x08000d4c

080007f8 <std>:
 80007f8:	2300      	movs	r3, #0
 80007fa:	b510      	push	{r4, lr}
 80007fc:	4604      	mov	r4, r0
 80007fe:	e9c0 3300 	strd	r3, r3, [r0]
 8000802:	6083      	str	r3, [r0, #8]
 8000804:	8181      	strh	r1, [r0, #12]
 8000806:	6643      	str	r3, [r0, #100]	; 0x64
 8000808:	81c2      	strh	r2, [r0, #14]
 800080a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800080e:	6183      	str	r3, [r0, #24]
 8000810:	4619      	mov	r1, r3
 8000812:	2208      	movs	r2, #8
 8000814:	305c      	adds	r0, #92	; 0x5c
 8000816:	f7ff fe13 	bl	8000440 <memset>
 800081a:	4b05      	ldr	r3, [pc, #20]	; (8000830 <std+0x38>)
 800081c:	6263      	str	r3, [r4, #36]	; 0x24
 800081e:	4b05      	ldr	r3, [pc, #20]	; (8000834 <std+0x3c>)
 8000820:	62a3      	str	r3, [r4, #40]	; 0x28
 8000822:	4b05      	ldr	r3, [pc, #20]	; (8000838 <std+0x40>)
 8000824:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000826:	4b05      	ldr	r3, [pc, #20]	; (800083c <std+0x44>)
 8000828:	6224      	str	r4, [r4, #32]
 800082a:	6323      	str	r3, [r4, #48]	; 0x30
 800082c:	bd10      	pop	{r4, pc}
 800082e:	bf00      	nop
 8000830:	08000bc5 	.word	0x08000bc5
 8000834:	08000be7 	.word	0x08000be7
 8000838:	08000c1f 	.word	0x08000c1f
 800083c:	08000c43 	.word	0x08000c43

08000840 <_cleanup_r>:
 8000840:	4901      	ldr	r1, [pc, #4]	; (8000848 <_cleanup_r+0x8>)
 8000842:	f000 b885 	b.w	8000950 <_fwalk_reent>
 8000846:	bf00      	nop
 8000848:	080007a5 	.word	0x080007a5

0800084c <__sfmoreglue>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	1e4a      	subs	r2, r1, #1
 8000850:	2568      	movs	r5, #104	; 0x68
 8000852:	4355      	muls	r5, r2
 8000854:	460e      	mov	r6, r1
 8000856:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800085a:	f000 f949 	bl	8000af0 <_malloc_r>
 800085e:	4604      	mov	r4, r0
 8000860:	b140      	cbz	r0, 8000874 <__sfmoreglue+0x28>
 8000862:	2100      	movs	r1, #0
 8000864:	e9c0 1600 	strd	r1, r6, [r0]
 8000868:	300c      	adds	r0, #12
 800086a:	60a0      	str	r0, [r4, #8]
 800086c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000870:	f7ff fde6 	bl	8000440 <memset>
 8000874:	4620      	mov	r0, r4
 8000876:	bd70      	pop	{r4, r5, r6, pc}

08000878 <__sinit>:
 8000878:	6983      	ldr	r3, [r0, #24]
 800087a:	b510      	push	{r4, lr}
 800087c:	4604      	mov	r4, r0
 800087e:	bb33      	cbnz	r3, 80008ce <__sinit+0x56>
 8000880:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000884:	6503      	str	r3, [r0, #80]	; 0x50
 8000886:	4b12      	ldr	r3, [pc, #72]	; (80008d0 <__sinit+0x58>)
 8000888:	4a12      	ldr	r2, [pc, #72]	; (80008d4 <__sinit+0x5c>)
 800088a:	681b      	ldr	r3, [r3, #0]
 800088c:	6282      	str	r2, [r0, #40]	; 0x28
 800088e:	4298      	cmp	r0, r3
 8000890:	bf04      	itt	eq
 8000892:	2301      	moveq	r3, #1
 8000894:	6183      	streq	r3, [r0, #24]
 8000896:	f000 f81f 	bl	80008d8 <__sfp>
 800089a:	6060      	str	r0, [r4, #4]
 800089c:	4620      	mov	r0, r4
 800089e:	f000 f81b 	bl	80008d8 <__sfp>
 80008a2:	60a0      	str	r0, [r4, #8]
 80008a4:	4620      	mov	r0, r4
 80008a6:	f000 f817 	bl	80008d8 <__sfp>
 80008aa:	2200      	movs	r2, #0
 80008ac:	60e0      	str	r0, [r4, #12]
 80008ae:	2104      	movs	r1, #4
 80008b0:	6860      	ldr	r0, [r4, #4]
 80008b2:	f7ff ffa1 	bl	80007f8 <std>
 80008b6:	2201      	movs	r2, #1
 80008b8:	2109      	movs	r1, #9
 80008ba:	68a0      	ldr	r0, [r4, #8]
 80008bc:	f7ff ff9c 	bl	80007f8 <std>
 80008c0:	2202      	movs	r2, #2
 80008c2:	2112      	movs	r1, #18
 80008c4:	68e0      	ldr	r0, [r4, #12]
 80008c6:	f7ff ff97 	bl	80007f8 <std>
 80008ca:	2301      	movs	r3, #1
 80008cc:	61a3      	str	r3, [r4, #24]
 80008ce:	bd10      	pop	{r4, pc}
 80008d0:	08000d48 	.word	0x08000d48
 80008d4:	08000841 	.word	0x08000841

080008d8 <__sfp>:
 80008d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008da:	4b1b      	ldr	r3, [pc, #108]	; (8000948 <__sfp+0x70>)
 80008dc:	681e      	ldr	r6, [r3, #0]
 80008de:	69b3      	ldr	r3, [r6, #24]
 80008e0:	4607      	mov	r7, r0
 80008e2:	b913      	cbnz	r3, 80008ea <__sfp+0x12>
 80008e4:	4630      	mov	r0, r6
 80008e6:	f7ff ffc7 	bl	8000878 <__sinit>
 80008ea:	3648      	adds	r6, #72	; 0x48
 80008ec:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80008f0:	3b01      	subs	r3, #1
 80008f2:	d503      	bpl.n	80008fc <__sfp+0x24>
 80008f4:	6833      	ldr	r3, [r6, #0]
 80008f6:	b133      	cbz	r3, 8000906 <__sfp+0x2e>
 80008f8:	6836      	ldr	r6, [r6, #0]
 80008fa:	e7f7      	b.n	80008ec <__sfp+0x14>
 80008fc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000900:	b16d      	cbz	r5, 800091e <__sfp+0x46>
 8000902:	3468      	adds	r4, #104	; 0x68
 8000904:	e7f4      	b.n	80008f0 <__sfp+0x18>
 8000906:	2104      	movs	r1, #4
 8000908:	4638      	mov	r0, r7
 800090a:	f7ff ff9f 	bl	800084c <__sfmoreglue>
 800090e:	6030      	str	r0, [r6, #0]
 8000910:	2800      	cmp	r0, #0
 8000912:	d1f1      	bne.n	80008f8 <__sfp+0x20>
 8000914:	230c      	movs	r3, #12
 8000916:	603b      	str	r3, [r7, #0]
 8000918:	4604      	mov	r4, r0
 800091a:	4620      	mov	r0, r4
 800091c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800091e:	4b0b      	ldr	r3, [pc, #44]	; (800094c <__sfp+0x74>)
 8000920:	6665      	str	r5, [r4, #100]	; 0x64
 8000922:	e9c4 5500 	strd	r5, r5, [r4]
 8000926:	60a5      	str	r5, [r4, #8]
 8000928:	e9c4 3503 	strd	r3, r5, [r4, #12]
 800092c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000930:	2208      	movs	r2, #8
 8000932:	4629      	mov	r1, r5
 8000934:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000938:	f7ff fd82 	bl	8000440 <memset>
 800093c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000940:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000944:	e7e9      	b.n	800091a <__sfp+0x42>
 8000946:	bf00      	nop
 8000948:	08000d48 	.word	0x08000d48
 800094c:	ffff0001 	.word	0xffff0001

08000950 <_fwalk_reent>:
 8000950:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000954:	4680      	mov	r8, r0
 8000956:	4689      	mov	r9, r1
 8000958:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800095c:	2600      	movs	r6, #0
 800095e:	b914      	cbnz	r4, 8000966 <_fwalk_reent+0x16>
 8000960:	4630      	mov	r0, r6
 8000962:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000966:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 800096a:	3f01      	subs	r7, #1
 800096c:	d501      	bpl.n	8000972 <_fwalk_reent+0x22>
 800096e:	6824      	ldr	r4, [r4, #0]
 8000970:	e7f5      	b.n	800095e <_fwalk_reent+0xe>
 8000972:	89ab      	ldrh	r3, [r5, #12]
 8000974:	2b01      	cmp	r3, #1
 8000976:	d907      	bls.n	8000988 <_fwalk_reent+0x38>
 8000978:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800097c:	3301      	adds	r3, #1
 800097e:	d003      	beq.n	8000988 <_fwalk_reent+0x38>
 8000980:	4629      	mov	r1, r5
 8000982:	4640      	mov	r0, r8
 8000984:	47c8      	blx	r9
 8000986:	4306      	orrs	r6, r0
 8000988:	3568      	adds	r5, #104	; 0x68
 800098a:	e7ee      	b.n	800096a <_fwalk_reent+0x1a>

0800098c <__swhatbuf_r>:
 800098c:	b570      	push	{r4, r5, r6, lr}
 800098e:	460e      	mov	r6, r1
 8000990:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000994:	2900      	cmp	r1, #0
 8000996:	b096      	sub	sp, #88	; 0x58
 8000998:	4614      	mov	r4, r2
 800099a:	461d      	mov	r5, r3
 800099c:	da07      	bge.n	80009ae <__swhatbuf_r+0x22>
 800099e:	2300      	movs	r3, #0
 80009a0:	602b      	str	r3, [r5, #0]
 80009a2:	89b3      	ldrh	r3, [r6, #12]
 80009a4:	061a      	lsls	r2, r3, #24
 80009a6:	d410      	bmi.n	80009ca <__swhatbuf_r+0x3e>
 80009a8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80009ac:	e00e      	b.n	80009cc <__swhatbuf_r+0x40>
 80009ae:	466a      	mov	r2, sp
 80009b0:	f000 f96e 	bl	8000c90 <_fstat_r>
 80009b4:	2800      	cmp	r0, #0
 80009b6:	dbf2      	blt.n	800099e <__swhatbuf_r+0x12>
 80009b8:	9a01      	ldr	r2, [sp, #4]
 80009ba:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80009be:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80009c2:	425a      	negs	r2, r3
 80009c4:	415a      	adcs	r2, r3
 80009c6:	602a      	str	r2, [r5, #0]
 80009c8:	e7ee      	b.n	80009a8 <__swhatbuf_r+0x1c>
 80009ca:	2340      	movs	r3, #64	; 0x40
 80009cc:	2000      	movs	r0, #0
 80009ce:	6023      	str	r3, [r4, #0]
 80009d0:	b016      	add	sp, #88	; 0x58
 80009d2:	bd70      	pop	{r4, r5, r6, pc}

080009d4 <__smakebuf_r>:
 80009d4:	898b      	ldrh	r3, [r1, #12]
 80009d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80009d8:	079d      	lsls	r5, r3, #30
 80009da:	4606      	mov	r6, r0
 80009dc:	460c      	mov	r4, r1
 80009de:	d507      	bpl.n	80009f0 <__smakebuf_r+0x1c>
 80009e0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80009e4:	6023      	str	r3, [r4, #0]
 80009e6:	6123      	str	r3, [r4, #16]
 80009e8:	2301      	movs	r3, #1
 80009ea:	6163      	str	r3, [r4, #20]
 80009ec:	b002      	add	sp, #8
 80009ee:	bd70      	pop	{r4, r5, r6, pc}
 80009f0:	ab01      	add	r3, sp, #4
 80009f2:	466a      	mov	r2, sp
 80009f4:	f7ff ffca 	bl	800098c <__swhatbuf_r>
 80009f8:	9900      	ldr	r1, [sp, #0]
 80009fa:	4605      	mov	r5, r0
 80009fc:	4630      	mov	r0, r6
 80009fe:	f000 f877 	bl	8000af0 <_malloc_r>
 8000a02:	b948      	cbnz	r0, 8000a18 <__smakebuf_r+0x44>
 8000a04:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a08:	059a      	lsls	r2, r3, #22
 8000a0a:	d4ef      	bmi.n	80009ec <__smakebuf_r+0x18>
 8000a0c:	f023 0303 	bic.w	r3, r3, #3
 8000a10:	f043 0302 	orr.w	r3, r3, #2
 8000a14:	81a3      	strh	r3, [r4, #12]
 8000a16:	e7e3      	b.n	80009e0 <__smakebuf_r+0xc>
 8000a18:	4b0d      	ldr	r3, [pc, #52]	; (8000a50 <__smakebuf_r+0x7c>)
 8000a1a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000a1c:	89a3      	ldrh	r3, [r4, #12]
 8000a1e:	6020      	str	r0, [r4, #0]
 8000a20:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a24:	81a3      	strh	r3, [r4, #12]
 8000a26:	9b00      	ldr	r3, [sp, #0]
 8000a28:	6163      	str	r3, [r4, #20]
 8000a2a:	9b01      	ldr	r3, [sp, #4]
 8000a2c:	6120      	str	r0, [r4, #16]
 8000a2e:	b15b      	cbz	r3, 8000a48 <__smakebuf_r+0x74>
 8000a30:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a34:	4630      	mov	r0, r6
 8000a36:	f000 f93d 	bl	8000cb4 <_isatty_r>
 8000a3a:	b128      	cbz	r0, 8000a48 <__smakebuf_r+0x74>
 8000a3c:	89a3      	ldrh	r3, [r4, #12]
 8000a3e:	f023 0303 	bic.w	r3, r3, #3
 8000a42:	f043 0301 	orr.w	r3, r3, #1
 8000a46:	81a3      	strh	r3, [r4, #12]
 8000a48:	89a3      	ldrh	r3, [r4, #12]
 8000a4a:	431d      	orrs	r5, r3
 8000a4c:	81a5      	strh	r5, [r4, #12]
 8000a4e:	e7cd      	b.n	80009ec <__smakebuf_r+0x18>
 8000a50:	08000841 	.word	0x08000841

08000a54 <_free_r>:
 8000a54:	b538      	push	{r3, r4, r5, lr}
 8000a56:	4605      	mov	r5, r0
 8000a58:	2900      	cmp	r1, #0
 8000a5a:	d045      	beq.n	8000ae8 <_free_r+0x94>
 8000a5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a60:	1f0c      	subs	r4, r1, #4
 8000a62:	2b00      	cmp	r3, #0
 8000a64:	bfb8      	it	lt
 8000a66:	18e4      	addlt	r4, r4, r3
 8000a68:	f000 f946 	bl	8000cf8 <__malloc_lock>
 8000a6c:	4a1f      	ldr	r2, [pc, #124]	; (8000aec <_free_r+0x98>)
 8000a6e:	6813      	ldr	r3, [r2, #0]
 8000a70:	4610      	mov	r0, r2
 8000a72:	b933      	cbnz	r3, 8000a82 <_free_r+0x2e>
 8000a74:	6063      	str	r3, [r4, #4]
 8000a76:	6014      	str	r4, [r2, #0]
 8000a78:	4628      	mov	r0, r5
 8000a7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a7e:	f000 b93c 	b.w	8000cfa <__malloc_unlock>
 8000a82:	42a3      	cmp	r3, r4
 8000a84:	d90c      	bls.n	8000aa0 <_free_r+0x4c>
 8000a86:	6821      	ldr	r1, [r4, #0]
 8000a88:	1862      	adds	r2, r4, r1
 8000a8a:	4293      	cmp	r3, r2
 8000a8c:	bf04      	itt	eq
 8000a8e:	681a      	ldreq	r2, [r3, #0]
 8000a90:	685b      	ldreq	r3, [r3, #4]
 8000a92:	6063      	str	r3, [r4, #4]
 8000a94:	bf04      	itt	eq
 8000a96:	1852      	addeq	r2, r2, r1
 8000a98:	6022      	streq	r2, [r4, #0]
 8000a9a:	6004      	str	r4, [r0, #0]
 8000a9c:	e7ec      	b.n	8000a78 <_free_r+0x24>
 8000a9e:	4613      	mov	r3, r2
 8000aa0:	685a      	ldr	r2, [r3, #4]
 8000aa2:	b10a      	cbz	r2, 8000aa8 <_free_r+0x54>
 8000aa4:	42a2      	cmp	r2, r4
 8000aa6:	d9fa      	bls.n	8000a9e <_free_r+0x4a>
 8000aa8:	6819      	ldr	r1, [r3, #0]
 8000aaa:	1858      	adds	r0, r3, r1
 8000aac:	42a0      	cmp	r0, r4
 8000aae:	d10b      	bne.n	8000ac8 <_free_r+0x74>
 8000ab0:	6820      	ldr	r0, [r4, #0]
 8000ab2:	4401      	add	r1, r0
 8000ab4:	1858      	adds	r0, r3, r1
 8000ab6:	4282      	cmp	r2, r0
 8000ab8:	6019      	str	r1, [r3, #0]
 8000aba:	d1dd      	bne.n	8000a78 <_free_r+0x24>
 8000abc:	6810      	ldr	r0, [r2, #0]
 8000abe:	6852      	ldr	r2, [r2, #4]
 8000ac0:	605a      	str	r2, [r3, #4]
 8000ac2:	4401      	add	r1, r0
 8000ac4:	6019      	str	r1, [r3, #0]
 8000ac6:	e7d7      	b.n	8000a78 <_free_r+0x24>
 8000ac8:	d902      	bls.n	8000ad0 <_free_r+0x7c>
 8000aca:	230c      	movs	r3, #12
 8000acc:	602b      	str	r3, [r5, #0]
 8000ace:	e7d3      	b.n	8000a78 <_free_r+0x24>
 8000ad0:	6820      	ldr	r0, [r4, #0]
 8000ad2:	1821      	adds	r1, r4, r0
 8000ad4:	428a      	cmp	r2, r1
 8000ad6:	bf04      	itt	eq
 8000ad8:	6811      	ldreq	r1, [r2, #0]
 8000ada:	6852      	ldreq	r2, [r2, #4]
 8000adc:	6062      	str	r2, [r4, #4]
 8000ade:	bf04      	itt	eq
 8000ae0:	1809      	addeq	r1, r1, r0
 8000ae2:	6021      	streq	r1, [r4, #0]
 8000ae4:	605c      	str	r4, [r3, #4]
 8000ae6:	e7c7      	b.n	8000a78 <_free_r+0x24>
 8000ae8:	bd38      	pop	{r3, r4, r5, pc}
 8000aea:	bf00      	nop
 8000aec:	20000084 	.word	0x20000084

08000af0 <_malloc_r>:
 8000af0:	b570      	push	{r4, r5, r6, lr}
 8000af2:	1ccd      	adds	r5, r1, #3
 8000af4:	f025 0503 	bic.w	r5, r5, #3
 8000af8:	3508      	adds	r5, #8
 8000afa:	2d0c      	cmp	r5, #12
 8000afc:	bf38      	it	cc
 8000afe:	250c      	movcc	r5, #12
 8000b00:	2d00      	cmp	r5, #0
 8000b02:	4606      	mov	r6, r0
 8000b04:	db01      	blt.n	8000b0a <_malloc_r+0x1a>
 8000b06:	42a9      	cmp	r1, r5
 8000b08:	d903      	bls.n	8000b12 <_malloc_r+0x22>
 8000b0a:	230c      	movs	r3, #12
 8000b0c:	6033      	str	r3, [r6, #0]
 8000b0e:	2000      	movs	r0, #0
 8000b10:	bd70      	pop	{r4, r5, r6, pc}
 8000b12:	f000 f8f1 	bl	8000cf8 <__malloc_lock>
 8000b16:	4a21      	ldr	r2, [pc, #132]	; (8000b9c <_malloc_r+0xac>)
 8000b18:	6814      	ldr	r4, [r2, #0]
 8000b1a:	4621      	mov	r1, r4
 8000b1c:	b991      	cbnz	r1, 8000b44 <_malloc_r+0x54>
 8000b1e:	4c20      	ldr	r4, [pc, #128]	; (8000ba0 <_malloc_r+0xb0>)
 8000b20:	6823      	ldr	r3, [r4, #0]
 8000b22:	b91b      	cbnz	r3, 8000b2c <_malloc_r+0x3c>
 8000b24:	4630      	mov	r0, r6
 8000b26:	f000 f83d 	bl	8000ba4 <_sbrk_r>
 8000b2a:	6020      	str	r0, [r4, #0]
 8000b2c:	4629      	mov	r1, r5
 8000b2e:	4630      	mov	r0, r6
 8000b30:	f000 f838 	bl	8000ba4 <_sbrk_r>
 8000b34:	1c43      	adds	r3, r0, #1
 8000b36:	d124      	bne.n	8000b82 <_malloc_r+0x92>
 8000b38:	230c      	movs	r3, #12
 8000b3a:	6033      	str	r3, [r6, #0]
 8000b3c:	4630      	mov	r0, r6
 8000b3e:	f000 f8dc 	bl	8000cfa <__malloc_unlock>
 8000b42:	e7e4      	b.n	8000b0e <_malloc_r+0x1e>
 8000b44:	680b      	ldr	r3, [r1, #0]
 8000b46:	1b5b      	subs	r3, r3, r5
 8000b48:	d418      	bmi.n	8000b7c <_malloc_r+0x8c>
 8000b4a:	2b0b      	cmp	r3, #11
 8000b4c:	d90f      	bls.n	8000b6e <_malloc_r+0x7e>
 8000b4e:	600b      	str	r3, [r1, #0]
 8000b50:	50cd      	str	r5, [r1, r3]
 8000b52:	18cc      	adds	r4, r1, r3
 8000b54:	4630      	mov	r0, r6
 8000b56:	f000 f8d0 	bl	8000cfa <__malloc_unlock>
 8000b5a:	f104 000b 	add.w	r0, r4, #11
 8000b5e:	1d23      	adds	r3, r4, #4
 8000b60:	f020 0007 	bic.w	r0, r0, #7
 8000b64:	1ac3      	subs	r3, r0, r3
 8000b66:	d0d3      	beq.n	8000b10 <_malloc_r+0x20>
 8000b68:	425a      	negs	r2, r3
 8000b6a:	50e2      	str	r2, [r4, r3]
 8000b6c:	e7d0      	b.n	8000b10 <_malloc_r+0x20>
 8000b6e:	428c      	cmp	r4, r1
 8000b70:	684b      	ldr	r3, [r1, #4]
 8000b72:	bf16      	itet	ne
 8000b74:	6063      	strne	r3, [r4, #4]
 8000b76:	6013      	streq	r3, [r2, #0]
 8000b78:	460c      	movne	r4, r1
 8000b7a:	e7eb      	b.n	8000b54 <_malloc_r+0x64>
 8000b7c:	460c      	mov	r4, r1
 8000b7e:	6849      	ldr	r1, [r1, #4]
 8000b80:	e7cc      	b.n	8000b1c <_malloc_r+0x2c>
 8000b82:	1cc4      	adds	r4, r0, #3
 8000b84:	f024 0403 	bic.w	r4, r4, #3
 8000b88:	42a0      	cmp	r0, r4
 8000b8a:	d005      	beq.n	8000b98 <_malloc_r+0xa8>
 8000b8c:	1a21      	subs	r1, r4, r0
 8000b8e:	4630      	mov	r0, r6
 8000b90:	f000 f808 	bl	8000ba4 <_sbrk_r>
 8000b94:	3001      	adds	r0, #1
 8000b96:	d0cf      	beq.n	8000b38 <_malloc_r+0x48>
 8000b98:	6025      	str	r5, [r4, #0]
 8000b9a:	e7db      	b.n	8000b54 <_malloc_r+0x64>
 8000b9c:	20000084 	.word	0x20000084
 8000ba0:	20000088 	.word	0x20000088

08000ba4 <_sbrk_r>:
 8000ba4:	b538      	push	{r3, r4, r5, lr}
 8000ba6:	4c06      	ldr	r4, [pc, #24]	; (8000bc0 <_sbrk_r+0x1c>)
 8000ba8:	2300      	movs	r3, #0
 8000baa:	4605      	mov	r5, r0
 8000bac:	4608      	mov	r0, r1
 8000bae:	6023      	str	r3, [r4, #0]
 8000bb0:	f7ff fbc6 	bl	8000340 <_sbrk>
 8000bb4:	1c43      	adds	r3, r0, #1
 8000bb6:	d102      	bne.n	8000bbe <_sbrk_r+0x1a>
 8000bb8:	6823      	ldr	r3, [r4, #0]
 8000bba:	b103      	cbz	r3, 8000bbe <_sbrk_r+0x1a>
 8000bbc:	602b      	str	r3, [r5, #0]
 8000bbe:	bd38      	pop	{r3, r4, r5, pc}
 8000bc0:	2000008c 	.word	0x2000008c

08000bc4 <__sread>:
 8000bc4:	b510      	push	{r4, lr}
 8000bc6:	460c      	mov	r4, r1
 8000bc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bcc:	f000 f896 	bl	8000cfc <_read_r>
 8000bd0:	2800      	cmp	r0, #0
 8000bd2:	bfab      	itete	ge
 8000bd4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000bd6:	89a3      	ldrhlt	r3, [r4, #12]
 8000bd8:	181b      	addge	r3, r3, r0
 8000bda:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000bde:	bfac      	ite	ge
 8000be0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000be2:	81a3      	strhlt	r3, [r4, #12]
 8000be4:	bd10      	pop	{r4, pc}

08000be6 <__swrite>:
 8000be6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bea:	461f      	mov	r7, r3
 8000bec:	898b      	ldrh	r3, [r1, #12]
 8000bee:	05db      	lsls	r3, r3, #23
 8000bf0:	4605      	mov	r5, r0
 8000bf2:	460c      	mov	r4, r1
 8000bf4:	4616      	mov	r6, r2
 8000bf6:	d505      	bpl.n	8000c04 <__swrite+0x1e>
 8000bf8:	2302      	movs	r3, #2
 8000bfa:	2200      	movs	r2, #0
 8000bfc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c00:	f000 f868 	bl	8000cd4 <_lseek_r>
 8000c04:	89a3      	ldrh	r3, [r4, #12]
 8000c06:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c0a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c0e:	81a3      	strh	r3, [r4, #12]
 8000c10:	4632      	mov	r2, r6
 8000c12:	463b      	mov	r3, r7
 8000c14:	4628      	mov	r0, r5
 8000c16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c1a:	f000 b817 	b.w	8000c4c <_write_r>

08000c1e <__sseek>:
 8000c1e:	b510      	push	{r4, lr}
 8000c20:	460c      	mov	r4, r1
 8000c22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c26:	f000 f855 	bl	8000cd4 <_lseek_r>
 8000c2a:	1c43      	adds	r3, r0, #1
 8000c2c:	89a3      	ldrh	r3, [r4, #12]
 8000c2e:	bf15      	itete	ne
 8000c30:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c32:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c36:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c3a:	81a3      	strheq	r3, [r4, #12]
 8000c3c:	bf18      	it	ne
 8000c3e:	81a3      	strhne	r3, [r4, #12]
 8000c40:	bd10      	pop	{r4, pc}

08000c42 <__sclose>:
 8000c42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c46:	f000 b813 	b.w	8000c70 <_close_r>
	...

08000c4c <_write_r>:
 8000c4c:	b538      	push	{r3, r4, r5, lr}
 8000c4e:	4c07      	ldr	r4, [pc, #28]	; (8000c6c <_write_r+0x20>)
 8000c50:	4605      	mov	r5, r0
 8000c52:	4608      	mov	r0, r1
 8000c54:	4611      	mov	r1, r2
 8000c56:	2200      	movs	r2, #0
 8000c58:	6022      	str	r2, [r4, #0]
 8000c5a:	461a      	mov	r2, r3
 8000c5c:	f7ff fb1f 	bl	800029e <_write>
 8000c60:	1c43      	adds	r3, r0, #1
 8000c62:	d102      	bne.n	8000c6a <_write_r+0x1e>
 8000c64:	6823      	ldr	r3, [r4, #0]
 8000c66:	b103      	cbz	r3, 8000c6a <_write_r+0x1e>
 8000c68:	602b      	str	r3, [r5, #0]
 8000c6a:	bd38      	pop	{r3, r4, r5, pc}
 8000c6c:	2000008c 	.word	0x2000008c

08000c70 <_close_r>:
 8000c70:	b538      	push	{r3, r4, r5, lr}
 8000c72:	4c06      	ldr	r4, [pc, #24]	; (8000c8c <_close_r+0x1c>)
 8000c74:	2300      	movs	r3, #0
 8000c76:	4605      	mov	r5, r0
 8000c78:	4608      	mov	r0, r1
 8000c7a:	6023      	str	r3, [r4, #0]
 8000c7c:	f7ff fb2b 	bl	80002d6 <_close>
 8000c80:	1c43      	adds	r3, r0, #1
 8000c82:	d102      	bne.n	8000c8a <_close_r+0x1a>
 8000c84:	6823      	ldr	r3, [r4, #0]
 8000c86:	b103      	cbz	r3, 8000c8a <_close_r+0x1a>
 8000c88:	602b      	str	r3, [r5, #0]
 8000c8a:	bd38      	pop	{r3, r4, r5, pc}
 8000c8c:	2000008c 	.word	0x2000008c

08000c90 <_fstat_r>:
 8000c90:	b538      	push	{r3, r4, r5, lr}
 8000c92:	4c07      	ldr	r4, [pc, #28]	; (8000cb0 <_fstat_r+0x20>)
 8000c94:	2300      	movs	r3, #0
 8000c96:	4605      	mov	r5, r0
 8000c98:	4608      	mov	r0, r1
 8000c9a:	4611      	mov	r1, r2
 8000c9c:	6023      	str	r3, [r4, #0]
 8000c9e:	f7ff fb26 	bl	80002ee <_fstat>
 8000ca2:	1c43      	adds	r3, r0, #1
 8000ca4:	d102      	bne.n	8000cac <_fstat_r+0x1c>
 8000ca6:	6823      	ldr	r3, [r4, #0]
 8000ca8:	b103      	cbz	r3, 8000cac <_fstat_r+0x1c>
 8000caa:	602b      	str	r3, [r5, #0]
 8000cac:	bd38      	pop	{r3, r4, r5, pc}
 8000cae:	bf00      	nop
 8000cb0:	2000008c 	.word	0x2000008c

08000cb4 <_isatty_r>:
 8000cb4:	b538      	push	{r3, r4, r5, lr}
 8000cb6:	4c06      	ldr	r4, [pc, #24]	; (8000cd0 <_isatty_r+0x1c>)
 8000cb8:	2300      	movs	r3, #0
 8000cba:	4605      	mov	r5, r0
 8000cbc:	4608      	mov	r0, r1
 8000cbe:	6023      	str	r3, [r4, #0]
 8000cc0:	f7ff fb25 	bl	800030e <_isatty>
 8000cc4:	1c43      	adds	r3, r0, #1
 8000cc6:	d102      	bne.n	8000cce <_isatty_r+0x1a>
 8000cc8:	6823      	ldr	r3, [r4, #0]
 8000cca:	b103      	cbz	r3, 8000cce <_isatty_r+0x1a>
 8000ccc:	602b      	str	r3, [r5, #0]
 8000cce:	bd38      	pop	{r3, r4, r5, pc}
 8000cd0:	2000008c 	.word	0x2000008c

08000cd4 <_lseek_r>:
 8000cd4:	b538      	push	{r3, r4, r5, lr}
 8000cd6:	4c07      	ldr	r4, [pc, #28]	; (8000cf4 <_lseek_r+0x20>)
 8000cd8:	4605      	mov	r5, r0
 8000cda:	4608      	mov	r0, r1
 8000cdc:	4611      	mov	r1, r2
 8000cde:	2200      	movs	r2, #0
 8000ce0:	6022      	str	r2, [r4, #0]
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	f7ff fb1e 	bl	8000324 <_lseek>
 8000ce8:	1c43      	adds	r3, r0, #1
 8000cea:	d102      	bne.n	8000cf2 <_lseek_r+0x1e>
 8000cec:	6823      	ldr	r3, [r4, #0]
 8000cee:	b103      	cbz	r3, 8000cf2 <_lseek_r+0x1e>
 8000cf0:	602b      	str	r3, [r5, #0]
 8000cf2:	bd38      	pop	{r3, r4, r5, pc}
 8000cf4:	2000008c 	.word	0x2000008c

08000cf8 <__malloc_lock>:
 8000cf8:	4770      	bx	lr

08000cfa <__malloc_unlock>:
 8000cfa:	4770      	bx	lr

08000cfc <_read_r>:
 8000cfc:	b538      	push	{r3, r4, r5, lr}
 8000cfe:	4c07      	ldr	r4, [pc, #28]	; (8000d1c <_read_r+0x20>)
 8000d00:	4605      	mov	r5, r0
 8000d02:	4608      	mov	r0, r1
 8000d04:	4611      	mov	r1, r2
 8000d06:	2200      	movs	r2, #0
 8000d08:	6022      	str	r2, [r4, #0]
 8000d0a:	461a      	mov	r2, r3
 8000d0c:	f7ff faaa 	bl	8000264 <_read>
 8000d10:	1c43      	adds	r3, r0, #1
 8000d12:	d102      	bne.n	8000d1a <_read_r+0x1e>
 8000d14:	6823      	ldr	r3, [r4, #0]
 8000d16:	b103      	cbz	r3, 8000d1a <_read_r+0x1e>
 8000d18:	602b      	str	r3, [r5, #0]
 8000d1a:	bd38      	pop	{r3, r4, r5, pc}
 8000d1c:	2000008c 	.word	0x2000008c

08000d20 <_init>:
 8000d20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d22:	bf00      	nop
 8000d24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d26:	bc08      	pop	{r3}
 8000d28:	469e      	mov	lr, r3
 8000d2a:	4770      	bx	lr

08000d2c <_fini>:
 8000d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2e:	bf00      	nop
 8000d30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d32:	bc08      	pop	{r3}
 8000d34:	469e      	mov	lr, r3
 8000d36:	4770      	bx	lr
